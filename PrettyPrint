/* Problem from Interview Bit
 link-[https://www.interviewbit.com/problems/prettyprint/]
 
 Print concentric rectangular pattern in a 2d matrix. 
Let us show you some examples to clarify what we mean.

Example 1:

Input: A = 4.
Output:

4 4 4 4 4 4 4 
4 3 3 3 3 3 4 
4 3 2 2 2 3 4 
4 3 2 1 2 3 4 
4 3 2 2 2 3 4 
4 3 3 3 3 3 4 
4 4 4 4 4 4 4 
Example 2:

Input: A = 3.
Output:

3 3 3 3 3 
3 2 2 2 3 
3 2 1 2 3 
3 2 2 2 3 
3 3 3 3 3 
The outermost rectangle is formed by A, then the next outermost is formed by A-1 and so on.

You will be given A as an argument to the function you need to implement, and you need to return a 2D array.*/


//Code:#include<bits/stdc++.h>
#define ll   unsigned long long int
using namespace std;
ll n,n1,n2,ans2;
vector<ll>ans;
int main()
{
/*ifstream infile;
     infile.open("A-large.in");
     //freopen("output_file_name.out","w",stdout);
      ofstream outfile;
   outfile.open("output_file_name.out");*/

int a;
vector<vector<int>> res;
vector<int>b;
int c;
cin>>a;

int s=2*A -1;
int s1=0;
int s2=s-1;
int s3=0;
int s4=s-1;
int p[s+5][s+5];
 // memset(p,0,sizeof(p));
while(a>0)
{
          for(int i=s1; i<=s2; i++)
          {
                    p[s1][i]=A;
                    p[s2][i]=A;
          }
         for(int i=s3; i<=s4; i++)
          {
                    p[i][s3]=A;
                    p[i][s4]=A;
          }

    s1++;
    s2--;
    s3++;
    s4--;

    a--;

}

for(int i=0; i<s; i++)
{       b.clear();
          for(int j=0; j<s; j++)
           {b.push_back(p[i][j]);}
           res.push_back(b);
}


}






